---
version: 2.1

orbs:
  prometheus: prometheus/prometheus@0.4.0

executors:
  # Whenever the Go version is updated here, .promu.yml and .promu-cgo.yml
  # should also be updated.
  golang:
    docker:
    - image: circleci/golang:1.14

jobs:
  test:
    executor: golang

    steps:
    - prometheus/setup_environment
    - run: go mod download
    - run: make
    - prometheus/store_artifact:
        file: node_exporter
    - run: rm -v node_exporter

  codespell:
    docker:
    - image: circleci/python

    steps:
    - checkout
    - run: sudo pip install codespell
    - run: codespell --skip=".git,./vendor,ttar,go.mod,go.sum,*pem,./collector/fixtures" -L uint,packages\',uptodate

  build:
    machine:
      image: ubuntu-1604:201903-01

    environment:
      DOCKER_TEST_IMAGE_NAME: quay.io/prometheus/golang-builder:1.14-base
      REPO_PATH: github.com/prometheus/node_exporter

    steps:
    - checkout
    - run: docker run --privileged linuxkit/binfmt:v0.7
    - run: make promu
    - run: promu crossbuild
    - run: promu --config .promu-cgo.yml crossbuild
    - persist_to_workspace:
        root: .
        paths:
        - .build
    - store_artifacts:
        path: .build
        destination: /build
    - run: ln -s .build/linux-amd64/node_exporter node_exporter
    - run:
        command: |
          if [ -n "$CIRCLE_TAG" ]; then
            make docker DOCKER_IMAGE_TAG=$CIRCLE_TAG
          else
            make docker
          fi
    - run: docker images
    - run: docker run --rm -t -v "$(pwd):/app" "${DOCKER_TEST_IMAGE_NAME}" -i "${REPO_PATH}" -T
    - run:
        command: |
          if [ -n "$CIRCLE_TAG" ]; then
            make test-docker DOCKER_IMAGE_TAG=$CIRCLE_TAG
          else
            make test-docker
          fi

  docker_hub_master:
    executor: golang

    steps:
    - checkout
    - setup_remote_docker
    - attach_workspace:
        at: .
    - run: ln -s .build/linux-amd64/node_exporter node_exporter
    - run: make docker
    - run: make docker DOCKER_REPO=quay.io/prometheus
    - run: docker images
    - run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
    - run: docker login -u $QUAY_LOGIN -p $QUAY_PASSWORD quay.io
    - run: make docker-publish
    - run: make docker-publish DOCKER_REPO=quay.io/prometheus

  docker_hub_release_tags:
    executor: golang

    steps:
    - checkout
    - setup_remote_docker
    - run: mkdir -v -p ${HOME}/bin
    - run: curl -L 'https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2' | tar xvjf - --strip-components 3 -C ${HOME}/bin
    - run: echo 'export PATH=${HOME}/bin:${PATH}' >> ${BASH_ENV}
    - attach_workspace:
        at: .
    - run: make promu
    - run: promu crossbuild tarballs
    - run: promu checksum .tarballs
    - run: promu release .tarballs
    - store_artifacts:
        path: .tarballs
        destination: releases
    - run: ln -s .build/linux-amd64/node_exporter node_exporter
    - run: make docker DOCKER_IMAGE_TAG=$CIRCLE_TAG
    - run: make docker DOCKER_IMAGE_TAG=$CIRCLE_TAG DOCKER_REPO=quay.io/prometheus
    - run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
    - run: docker login -u $QUAY_LOGIN -p $QUAY_PASSWORD quay.io
    - run: |
        if [[ "$CIRCLE_TAG" =~ ^v[0-9]+(\.[0-9]+){2}$ ]]; then
          make docker-tag-latest DOCKER_IMAGE_TAG="$CIRCLE_TAG"
          make docker-tag-latest DOCKER_IMAGE_TAG="$CIRCLE_TAG" DOCKER_REPO=quay.io/prometheus
        fi
    - run: make docker-publish
    - run: make docker-publish DOCKER_REPO=quay.io/prometheus

workflows:
  version: 2
  node_exporter:
    jobs:
    - test:
        filters:
          tags:
            only: /.*/
    - build:
        filters:
          tags:
            only: /.*/
    - codespell:
        filters:
          tags:
            only: /.*/
    - prometheus/publish_master:
        context: org-context
        requires:
        - test
        - build
        filters:
          branches:
            only: master
    - prometheus/publish_release:
        context: org-context
        requires:
        - test
        - build
        filters:
          tags:
            only: /^v.*/
          branches:
            ignore: /.*/
